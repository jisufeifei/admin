{"remainingRequest":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/guorui/Desktop/company/vue/04-vue-cli-admin/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/src/views/Login.vue","mtime":1596780127541},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNsb2dpbnsKICAgIHdpZHRoOiAxMDAlOwogICAgbWluLWhlaWdodDogMTAwJTsKICAgIC8vIGJhY2tncm91bmQtY29sb3I6IGNvcm5mbG93ZXJibHVlOwogICAgfQoubG9naW4td2FycHsKICAgIHdpZHRoOiAzMDBweDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIG1hcmdpbjogMCBhdXRvOwogICAgcGFkZGluZzogMTAwcHggMzVweCAwOwp9Ci5tZW51LXRhYnsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGxpewogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICB3aWR0aDogODhweDsKICAgICAgICBsaW5lLWhlaWdodDogMzZweDsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4OwogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIH0KICAgIC5jdXJyZW50ewogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTsKICAgIH0KfQouZm9ybUl0ZW17CiAgICBtYXJnaW4tdG9wOiAxMHB4Owp9Ci5sb2dpbklucHV0IC5lbC1pbnB1dF9faW5uZXI6Zm9jdXN7CiAgICBib3JkZXItY29sb3I6c2FuZHlicm93bjsKfQouc3VibWl0LWJ0bnsKICAgIG1hcmdpbi10b3A6IDIwcHg7Cn0KLmJ0bnsKICAgIHdpZHRoOiAxMDAlOwogICAgbWFyZ2luOiAwIGF1dG87Cn0KLmxhYmVsbmFtZXsKICAgIGNvbG9yOiAjZmZmOwp9Ci5lbC1yb3cgewogICAgJjpsYXN0LWNoaWxkIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAwOwogICAgfQp9Ci5lbC1jb2wgewogICAgYm9yZGVyLXJhZGl1czogNHB4Owp9Cgo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"login\" v-title data-title=\"登录\">\n        <div class=\"login-warp\">\n            <ul class=\"menu-tab\" >\n                <li  v-for=\"(item,index) in menuTab\" :key=\"item.id\" @click=\"changeTab(item)\" :class='[ currentNum == index + 1  ? \"current\" : \"\"]'>{{item.txt}}</li>\n            </ul>\n            <!-- 表单提交 start -->\n            <el-form :model=\"formLogin\" :rules=\"rules\" ref=\"ruleLogin\">\n                <el-form-item prop=\"email\">\n                    <label for='userName' class=\"labelname eamil\">邮箱</label>\n                    <el-input id=\"userName\" class=\"loginInput\" type=\"text\" v-model=\"formLogin.email\" placeholder=\"请输入邮箱\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\" class=\"formItem\">\n                    <label for='password' class=\"labelname password\">密码</label>\n                        <el-input id=\"password\" class=\"loginInput\" type=\"password\" v-model=\"formLogin.password\" show-password placeholder=\"请输入密码\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"phone\" class=\"formItem\">\n                    <label for=\"phone\" class=\"labelname password\">手机号</label>\n                        <el-input id=\"phone\" class=\"loginInput\" type=\"text\" v-model=\"formLogin.phone\" placeholder=\"请输入手机号码\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"code\" class=\"formItem\">\n                    <label for=\"code\" class=\"labelname code\">验证码</label>\n                    <el-row type=\"flex\" :gutter=\"2\" justify=\"space-between\">\n                        <el-col :span=\"14\">\n                                <el-input id=\"code\" class=\"loginInput\" type=\"text\" v-model=\"formLogin.code\" placeholder=\"请输入验证码\"></el-input>\n                        </el-col>\n                        <el-col :span=\"9\">\n                            <el-button type=\"success\" @click=\"getCode()\" :disabled=\"codeStatus.status\">{{codeStatus.text}}</el-button>\n                        </el-col>\n                    </el-row>\n                </el-form-item>\n                <el-form-item class=\"submit-btn\">\n                    <el-button class=\"btn primary\" size=\"medium\" type=\"primary\"  @click=\"submitForm('ruleLogin')\" :disabled=\"isLogin\">登录</el-button>\n                </el-form-item>\n            </el-form>\n            <!-- 表单提交 end -->\n        </div>\n        <router-view />\n    </div>\n</template>\n<script>\nimport sha1 from 'js-sha1'\nimport { getSms, Login} from '@/api/login'\nimport LoginComponents from \"@/components/login/LoginComponents.vue\"\nimport {stripscript,stripPassword,stripEmail,stripPhone} from \"@/utils/validate\"\nexport default {\n    name: 'Login',\n    components: {\n        LoginComponents\n    },\n    data(){\n        /*\n        * 验证邮箱规则\n        */\n        var validateEmail = ( rule,value,callback )=>{\n            if( value == \"\" ){\n                callback(new Error(\"请输入邮箱\"))\n            }else if(stripEmail(value)){\n                callback(new Error(\"请输入正确的邮箱\"))\n            }else{\n                callback()\n            }\n        };\n        /*\n        * 验证密码\n        */\n        var validatePassword = (rule,value,callback)=>{\n            if( value === \"\" ){\n                callback(new Error(\"请输入密码\"))\n            }else if(stripPassword(value)){\n                console.log(value)\n                callback(new Error(\"密码为6-21位数字与字母的组合\"))\n            } else {\n                callback();\n            }\n        };\n        /*\n        * 验证手机\n        */\n        var validatePhone = (rule,value,callback)=>{\n            if(value === \"\"){\n                callback(new Error(\"请输入手机号码\"))\n            }else if(stripPhone(value)){\n                callback(new Error(\"请输入正确的手机号码\"))\n            }else{\n                callback()\n            }\n        };\n        /*\n        * 验证验证码\n        */\n        var validateCode = (rule,value,callback)=>{\n            if( value === \"\" ){\n                callback(new Error(\"请输入验证码\"))\n            } else {\n                callback();\n            }\n        };\n        return {\n            currentNum: 1,\n            isLogin: true,\n            timer: null,//定时器清零\n            codeStatus: {\n                status: false,//获取验证码时按钮禁用，并显示‘倒计时’\n                text: '获取验证码',\n            },\n            menuTab: [\n                {id: 1,txt: '登录',current: true},\n                {id: 2,txt: '注册',current: false}\n            ],\n            formLogin: {\n                email: \"\",\n                password: \"\",\n                phone: \"\",\n                code: \"\"\n            },\n            rules: {\n                email: [\n                    { validator: validateEmail, trigger: 'blur' },\n                ],\n                password: [\n                    { validator: validatePassword, trigger: 'blur' }\n                ],\n                phone: [\n                    { validator: validatePhone, trigger: 'blur' }\n                ],\n                code: [\n                    { validator: validateCode, trigger: 'blur' }\n                ]\n            }    \n        };\n        \n\n    },\n    beforeCreate(){\n        \n    },\n    created(){\n    },\n    mounted(){\n        document.querySelector('body').setAttribute('style', 'background-color:cornflowerblue')\n    },\n    beforeDestroy(){\n        document.querySelector('body').removeAttribute('style')\n    },\n    methods: {\n        //切换tab改变页面\n        changeTab(item){\n            this.currentNum = item.id\n            if(item.id == 2){\n                console.log(\"跳转到注册页面\")\n                this.$router.push(\"./SignUp\")\n            }\n        },\n        //更新验证码状态\n        // updateCodeBtnStatus(params){\n        //     this.codeStatus.status = parmas.status;\n        //     this.codeStatus.text = parmas.text;\n        // },\n        //获取验证码\n        getCode(){\n            let requestData = {\n                username: this.formLogin.email,\n                module: 'login'//传递模型，后台验证邮箱是否存在\n            };\n            //前端验证的步骤\n            //验证邮箱不能为空\n            if(this.formLogin.email === ''){\n                this.$message.error('邮箱不能为空！！')\n                return false\n            };\n            //验证提交时的邮箱格式\n            if(stripEmail(this.formLogin.email)){\n                console.log(this.formLogin.email)\n                this.$message.error('邮箱格式不正确！！')\n            }\n            // this.$options.updateCodeBtnStatus({\n            //             status: true,\n            //             text: '正在发送中'\n            //         })\n            this.codeStatus.status = true,\n            this.codeStatus.text = '正在发送中',\n            this.isLogin = false,\n            //请求接口\n            //后端返回结果携带验证（防止前端数据没有将邮箱传递到后台）\n            setTimeout(() => {\n                //延长时间\n                    getSms(requestData).then( response =>{\n                    console.log(response.data)\n                    this.$message({\n                        message: response.data.message,\n                        type: 'success'\n                    });\n                    //启用登录或者注册按钮\n                    //设置定时器，获取验证码倒计时60s\n                    this.countDown(60)\n                }).catch( error =>{\n                    console.log(error)\n                })\n            }, 1000);\n        },\n        \n        //提交信息\n        submitForm(ruleName){\n            alert('点击了提交按钮');\n            this.$options.methods.clearCountDown();\n            this.$refs[ruleName].validate((valid) => {\n                if (valid) {\n                    let requestData = {\n                        username: this.formLogin.email,\n                        password: sha1(this.formLogin.password),\n                        code: this.formLogin.code,\n                    }\n                    Login(requestData).then(response=>{\n                        this.$message({\n                            message: response.data.message,\n                            type: 'success'\n                        });\n                    }).catch(error=>{\n                        console.log(error)\n                    })\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        //重置清空数据\n        // resetForm(formLogin){\n        //     this.$refs[formLogin].resetFields();\n        // },\n        /**\n         * 倒计时\n        */\n        countDown(number){\n            //判断定时器是否存在，存在就清除；\n            if(this.timer){\n                clearInterval(this.timer);\n            }\n            let time = number;\n            this.timer = setInterval(()=>{\n                time--;\n                if(time === 0){\n                    //清除倒计时\n                    clearInterval(this.timer);\n                    // this.$options.updateCodeBtnStatus({\n                    //     status: false,\n                    //     text: '请重新发送'\n                    // })\n                    this.codeStatus.text = `请重新发送`;\n                    this.codeStatus.status = false;\n                }else{\n                    this.codeStatus.text = `倒计时${time}s`;\n                }\n            },1000)\n        },\n        /**\n         * 清除倒计时\n        */\n        clearCountDown(){\n            //还原验证码框内的内容\n            // this.$options.updateCodeBtnStatus({\n            //     status: true,\n            //     text: '获取验证码'\n            // })\n            this.codeStatus.text = '获取验证码';\n            this.codeStatus.status = true;\n            //清除倒计时\n            clearInterval(this.timer)\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n    #login{\n        width: 100%;\n        min-height: 100%;\n        // background-color: cornflowerblue;\n        }\n    .login-warp{\n        width: 300px;\n        position: relative;\n        margin: 0 auto;\n        padding: 100px 35px 0;\n    }\n    .menu-tab{\n        text-align: center;\n        li{\n            display: inline-block;\n            width: 88px;\n            line-height: 36px;\n            font-size: 14px;\n            color: #fff;\n            border-radius: 3px;\n            cursor: pointer;\n        }\n        .current{\n            background-color: rgba(0, 0, 0, 0.4);\n        }\n    }\n    .formItem{\n        margin-top: 10px;\n    }\n    .loginInput .el-input__inner:focus{\n        border-color:sandybrown;\n    }\n    .submit-btn{\n        margin-top: 20px;\n    }\n    .btn{\n        width: 100%;\n        margin: 0 auto;\n    }\n    .labelname{\n        color: #fff;\n    }\n    .el-row {\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 4px;\n    }\n    \n</style>"]}]}