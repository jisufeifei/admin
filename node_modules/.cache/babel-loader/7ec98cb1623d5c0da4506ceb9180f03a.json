{"remainingRequest":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/babel-loader/lib/index.js!/Users/guorui/Desktop/company/vue/04-vue-cli-admin/src/utils/validate.js","dependencies":[{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/src/utils/validate.js","mtime":1593759666029},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guorui/Desktop/company/vue/04-vue-cli-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwoKLyoKKui/h+a7pOeJueauiuWtl+espuS4sgoqLwpleHBvcnQgZnVuY3Rpb24gc3RyaXBzY3JpcHQoc3RyKSB7CiAgdmFyIHBhdHRlcm4gPSBuZXcgUmVnRXhwKCJbYH4hQCMkXiYqKCk9fHt9Jzo7JyxcXFtcXF0uPD4vP37vvIFAI++/peKApuKApiYq77yI77yJJjvigJR8eyB944CQ44CR4oCY77yb77ya4oCd4oCcJ+OAgu+8jOOAge+8n10iKTsKICB2YXIgcnMgPSAiIjsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHsKICAgIHJzID0gcnMgKyBzdHIuc3Vic3RyKGksIDEpLnJlcGxhY2UocGF0dGVybiwgJycpOwogIH0KCiAgcmV0dXJuIHJzOwp9Ci8qCiAgICAqIOmqjOivgeWvhueggSjlr4bnoIHmmK/nlLE2LTIx5L2N5pWw5a2X5LiO5a2X5q+N77yI5LiN5YiG5aSn5bCP5YaZ77yJ57uE5ZCI6ICM5oiQKQoqLwoKZXhwb3J0IGZ1bmN0aW9uIHN0cmlwUGFzc3dvcmQodmFsdWUpIHsKICB2YXIgcmVnID0gL14oPyFbMC05XSskKSg/IVthLXpBLVpdKyQpWzAtOUEtWmEtel17NiwyMX0kLzsKICByZXR1cm4gIXJlZy50ZXN0KHZhbHVlKTsKfQovKgogICAgKiDpqozor4HmiYvmnLoKKi8KCmV4cG9ydCBmdW5jdGlvbiBzdHJpcFBob25lKHZhbHVlKSB7CiAgdmFyIHJlZyA9IC9eMVszfDR8NXw2fDd8OHw5XVswLTldezl9JC87CiAgcmV0dXJuICFyZWcudGVzdCh2YWx1ZSk7Cn0KLyoKICAgICog6aqM6K+B55So5oi35ZCNNC0xNuS9jSjlrZfmr43vvIzmlbDlrZfvvIxf77yMLSkKKi8KCmV4cG9ydCBmdW5jdGlvbiBzdHJpcFVzZXJuYW1lKHZhbHVlKSB7CiAgdmFyIHJlZyA9IC9eW2EtekEtWjAtOV8tXXs0LDE2fSQvOwogIHJldHVybiAhcmVnLnRlc3QodmFsdWUpOwp9Ci8qCiAgICAqIOmqjOivgemCrueusQoqLwoKZXhwb3J0IGZ1bmN0aW9uIHN0cmlwRW1haWwodmFsdWUpIHsKICB2YXIgcmVnID0gL14oW2EtekEtWjAtOV8tXSkrQChbYS16QS1aMC05Xy1dKSsoKC5bYS16QS1aMC05Xy1dezIsM30pezEsMn0pJC87CiAgcmV0dXJuICFyZWcudGVzdCh2YWx1ZSk7Cn0="},{"version":3,"sources":["/Users/guorui/Desktop/company/vue/04-vue-cli-admin/src/utils/validate.js"],"names":["stripscript","str","pattern","RegExp","rs","i","length","substr","replace","stripPassword","value","reg","test","stripPhone","stripUsername","stripEmail"],"mappings":";;;;;AAAA;;;AAGA,OAAO,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AAC7B,MAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,iEAAX,CAAd;AACA,MAAIC,EAAE,GAAG,EAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,EAAE,GAAGA,EAAE,GAAGH,GAAG,CAACM,MAAJ,CAAWF,CAAX,EAAc,CAAd,EAAiBG,OAAjB,CAAyBN,OAAzB,EAAkC,EAAlC,CAAV;AACH;;AACD,SAAOE,EAAP;AACH;AACD;;;;AAGA,OAAO,SAASK,aAAT,CAAuBC,KAAvB,EAA6B;AAChC,MAAIC,GAAG,GAAG,8CAAV;AACA,SAAO,CAACA,GAAG,CAACC,IAAJ,CAASF,KAAT,CAAR;AACH;AAED;;;;AAGA,OAAO,SAASG,UAAT,CAAoBH,KAApB,EAA0B;AAC7B,MAAIC,GAAG,GAAG,4BAAV;AACA,SAAO,CAACA,GAAG,CAACC,IAAJ,CAASF,KAAT,CAAR;AACH;AAGD;;;;AAGA,OAAO,SAASI,aAAT,CAAuBJ,KAAvB,EAA6B;AAChC,MAAIC,GAAG,GAAG,uBAAV;AACA,SAAO,CAACA,GAAG,CAACC,IAAJ,CAASF,KAAT,CAAR;AACH;AACD;;;;AAGA,OAAO,SAASK,UAAT,CAAoBL,KAApB,EAA0B;AAC7B,MAAIC,GAAG,GAAG,iEAAV;AACA,SAAO,CAACA,GAAG,CAACC,IAAJ,CAASF,KAAT,CAAR;AACH","sourcesContent":["/*\n*过滤特殊字符串\n*/\nexport function stripscript(str) {\n    var pattern = new RegExp(\"[`~!@#$^&*()=|{}':;',\\\\[\\\\].<>/?~！@#￥……&*（）&;—|{ }【】‘；：”“'。，、？]\")\n    var rs = \"\";\n    for (var i = 0; i < str.length; i++) {\n        rs = rs + str.substr(i, 1).replace(pattern, '');\n    }\n    return rs;\n}\n/*\n    * 验证密码(密码是由6-21位数字与字母（不分大小写）组合而成)\n*/\nexport function stripPassword(value){\n    let reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,21}$/;\n    return !reg.test(value)\n}\n\n/*\n    * 验证手机\n*/\nexport function stripPhone(value){\n    let reg = /^1[3|4|5|6|7|8|9][0-9]{9}$/;\n    return !reg.test(value)\n}\n\n\n/*\n    * 验证用户名4-16位(字母，数字，_，-)\n*/\nexport function stripUsername(value){\n    let reg = /^[a-zA-Z0-9_-]{4,16}$/;\n    return !reg.test(value)\n}\n/*\n    * 验证邮箱\n*/\nexport function stripEmail(value){\n    let reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n    return !reg.test(value)\n}\n\n"]}]}